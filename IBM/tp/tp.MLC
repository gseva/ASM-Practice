***********************************************************************
* 75.03 ORGANIZACION DEL COMPUTADOR                    VERSION: 1.00  *
*                                                                     *
* DESCRIPCION DEL MODULO:                                             *
*                                                                     *
***********************************************************************
*+-------------------------------------------------------------------+*
*|LOG DE CAMBIOS:                                                    |*
*+-------------------------------------------------------------------+*
*|VERSION FECHA    PGDR DESCRIPCION                                  |*
*+------- -------- ---- ---------------------------------------------+*
*|                                                                   |*
*+-------------------------------------------------------------------+*
*                                                                     *
*   REGISTROS GENERALES                                               *
*        REG 3 = REGISTRO BASE                                        *
*        REG 4 = REGISTRO BASE                                        *
*        REG 5 = REGISTRO BASE                                        *
*                                                                     *
*        REG 7 = Indice en memoria                                    *
*        REG 8 = Contador en loops                                    *
*        REG 9 = Indice en memoria                                    *
*                                                                     *
*        REG 11 = Registro para llamadas a rutinas                    *
*        REG 12 = Registro para llamadas a rutinas                    *
*                                                                     *
*   PROGRAMAS LLAMADOS                                                *
*                                                                     *
*   ARCHIVOS UTILIZADOS                                               *
*                                                                     *
***********************************************************************

TSOEDIT  SUBENTRY BASES=(3,4,5)
         BAL      12,LEERARCH
ENTRADA  MVC      COMANDO(1),=C' '   * Limpio el comando
         MVC      COMANDO+1(55),COMANDO
         WTOR     'Comandos: C/CHANGE, N/NEXT, Q',COMANDO,,WAITECB
         WAIT     ECB=WAITECB
         BAL      12,PARSEAR
         CLC      ESVALIDO,=C'N'
         BE       ERROR
         BAL      12,AMAYUS
         BAL      12,EJECUTAR
         MVI      ESALL,C'N'
         B        ENTRADA

ERROR    MVC      LINEA,MSGINVAL
         BAL      11,IMPRIMIR
         B        ENTRADA

SALIR    MVC      LINEA,MSGSALID
         BAL      11,IMPRIMIR
	      SUBEXIT


* Rutina de lectura del archivo inicial *
LEERARCH OPEN     (ARCHIN,(INPUT))
         LA       7,TEXTOIN
LEER     GET      ARCHIN,LINEA
         MVC      0(80,7),LINEA
         LA       7,80(7)
         B        LEER
EOF      MVC      0(1,7),=X'00'
         CLOSE    ARCHIN
         BR       12

* Rutina de validacion y parseo del comando *
PARSEAR  CLI      INICIAL,C'Q'
         BE       SALIR
         CLC      COMANDO(2),=C'C '
         BE       PARSECNG
         CLC      COMANDO(6),=C'CHANGE '
         BNE      VALN
         MVC      COMANDO+1(50),COMANDO+6  * CHANGE '..' -> C '..'
         B        PARSECNG
VALN     CLI      INICIAL,C'N'
         BE       PARSENXT
         CLC      COMANDO(5),=C'NEXT '
         BE       PARSENXT
INVAL    MVI      ESVALIDO,C'N'
         BR       12
VALIDO   MVI      ESVALIDO,C'S'
         BR       12

PARSENXT CLI      PARSEADO,C'S'
         BNE      INVAL
         B        VALIDO

* Subrutina que parsea el comando CHANGE, guarda las palabras pasadas *
* en rotulos ANTES y DESPUES. Checkea el formato. Acepta un maximo de *
* 20 caracteres por cada parametro. *
PARSECNG CLC      COMANDO+1(2),=X'407D'  * X'407D' == C' \''
         BNE      INVAL
         LA       8,20
         LA       9,ANTES
         LA       7,COMANDO+3
LOOPANTS CLC      0(1,7),=X'7D'
         BE       FINANTS
         MVC      0(1,9),0(7)
         LA       7,1(7)
         LA       9,1(9)
         BCT      8,LOOPANTS
         B        INVAL
FINANTS  MVI      0(9),X'00'
         CLC      1(2,7),=X'407D'
         BNE      INVAL
         LA       7,3(7)
         LA       8,20
         LA       9,DESPUES
LOOPDSPS CLI      0(7),X'7D'
         BE       FINDSPS
         MVC      0(1,9),0(7)
         LA       7,1(7)
         LA       9,1(9)
         BCT      8,LOOPDSPS
         B        INVAL
FINDSPS  MVI      0(9),X'00'
         CLC      1(2,7),=C' ALL'
         BE       PARESALL
         MVI      ESALL,C'N'
         B        FINPARSE
PARESALL MVI      ESALL,C'S'
FINPARSE MVI      PARSEADO,C'S'
         B        VALIDO


* Rutina que convierte DESPUES a mayuscula *
AMAYUS   LA       7,DESPUES
         LA       8,20
AMAYLOOP CLI      0(7),X'81'
         BL       AMAYSGTE
         CLI      0(7),X'A9'
         BH       AMAYSGTE
         LA       10,0
         IC       10,0(7)
         A        10,=F'64'
         STC      10,0(7)
AMAYSGTE LA       7,1(7)
         BCT      8,AMAYLOOP
         BR       12


* Rutina que ejecuta el comando: reemplaza las ocurrencias de ANTES *
* encontradas en el texto inicial por DESPUES en el texto final *
EJECUTAR LA       7,TEXTOIN
         LA       9,ANTES
         LA       8,TEXTOOUT
NXTLOOP  CLC      0(1,7),0(9)
         BE       NXTENC    * Empieza como la palabra que busco
NXTCOPY  MVC      0(1,8),0(7)
         CLI      0(7),X'00'
         BE       NXTNFND
         LA       7,1(7)
         LA       8,1(8)
         B        NXTLOOP
NXTENC   LR       6,7       * Guardo el estado antes de seguir
NXTELOOP LA       7,1(7)
         LA       9,1(9)
         CLI      0(9),X'00'
         BE       NXTCNG
         CLC      0(1,7),0(9)
         BE       NXTELOOP
         LR       7,6       * No es la palabra que necesito
         LA       9,ANTES
         B        NXTCOPY
NXTCNG   LA       6,DESPUES * Cambio a partir de aca por DESPUES
NXTCLOOP CLI      0(6),X'00'
         BE       NXTSTOP
         MVC      0(1,8),0(6)
         LA       8,1(8)
         LA       6,1(6)
         B        NXTCLOOP
NXTSTOP  LA       9,ANTES
         CLI      ESALL,C'S'
         BE       NXTLOOP  * Si la opcion es all, sigo recorriendo
NXTCOMPL MVC      0(1,8),0(7)
         CLI      0(8),X'00'
         BE       NXTMOSTR
         LA       7,1(7)
         LA       8,1(8)
         B        NXTCOMPL
NXTNFND  CLI      ESALL,C'S'
         BNE      NXTMSG
NXTMOSTR MVC      LINEA,MSGANTES
         BAL      11,IMPRIMIR
         BAL      10,MOSTRAR
NXTINOUT LA       7,TEXTOIN
         LA       8,TEXTOOUT
NXTILOOP MVC      0(1,7),0(8)
         CLI      0(7),X'00'
         BE       NXTMSOUT
         LA       7,1(7)
         LA       8,1(8)
         B        NXTILOOP
NXTMSOUT MVC      LINEA,MSGDSPS
         BAL      11,IMPRIMIR
         BAL      10,MOSTRAR
         B        NXTEXIT
NXTMSG   MVC      LINEA,MSGNONXT
         BAL      11,IMPRIMIR
NXTEXIT  BR       12


* Rutina que muestra el texto *
MOSTRAR  LA       7,TEXTOIN
MOSTLOOP MVC      LINEA(1),=C' '
         MVC      LINEA+1(79),LINEA
         LA       9,LINEA
         LA       8,80
MOSTLNEA MVC      0(1,9),0(7)
         CLC      0(1,7),=X'00'
         BE       MOSTSAL
         LA       7,1(7)
         LA       9,1(9)
         BCT      8,MOSTLNEA
         BAL      11,IMPRIMIR
         B        MOSTLOOP
MOSTSAL  BAL      11,IMPRIMIR
         BR       10


* Rutina que muestra una linea en pantalla *
IMPRIMIR MVC      SALIDA,LINEA
         WTO      MF=(E,WTOBLOCK)
         BR       11



* Declaracion de variables *
COMANDO  DS       0CL56   * Comando hasta 56 caracteres
INICIAL  DS       1C
RESTO    DS       59C

PARSEADO DS       C
ESVALIDO DS       C
ESALL    DC       C'N'
HAYCAMB  DC       C'N'

LINEA    DS       CL80    * Linea de texto
MSGINVAL DC       C'Comando invalido',X'00'
MSGSALID DC       C'Muchas gracias, vuelva pronto',X'00'
MSGNONXT DC       C'No hay mas ocurrencias',X'00'
MSGANTES DC       C'---ANTES---',X'00'
MSGDSPS  DC       C'---DESPUES---',X'00'

TEXTOIN  DS       60CL80
TEXTOOUT DS       60CL80

ANTES    DS       20C
DESPUES  DS       20C

CHAR     DS       C

* Archivo de entrada *
ARCHIN   DCB      DSNAME=ARCHIVO,LRECL=80,RECFM=FT,MACRF=GM,EODAD=EOF
ARCHIVO  DC       C'lorem.txt',X'00'

WAITECB  DS       F
WTOBLOCK DC       H'84'
         DC       H'0'
SALIDA   DS       CL80

	      END
